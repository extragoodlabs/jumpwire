name: Ship it!

on:
  push:
    branches:
      - trunk
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - trunk

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      mariadb:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '25'
          elixir-version: '1.14.5'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        if: ${{ !env.ACT }}
        with:
          path: |
            deps
            _build
            jumpwire_test_keys
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - run: mix deps.get
      - run: mix test --trace
      - name: Test against MariaDB
        env:
          MYSQL_TEST_PORT: 3307
        run: mix test --trace test/jumpwire/proxy/mysql_test.exs

  docker-image:
    runs-on: ubuntu-latest
    needs:
      - test
    if: github.ref_type == 'tag' || github.ref_name	== 'trunk'
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker metadata
        id: semver_meta
        if: github.ref_type == 'tag'
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/extragoodlabs/jumpwire
            jumpwire/jumpwire
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=sha,format=long
      - name: Docker metadata
        id: edge_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/extragoodlabs/jumpwire
            jumpwire/jumpwire
          tags: |
            type=edge
            type=sha
            type=sha,format=long
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: jumpwire
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.semver_meta.outputs.tags }},${{ steps.edge_meta.outputs.tags }}
          push: true
