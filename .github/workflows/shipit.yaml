name: Ship it!

on:
  push:
    branches:
      - trunk
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - trunk

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      mariadb:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '25'
          elixir-version: '1.14.5'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        if: ${{ !env.ACT }}
        with:
          path: |
            deps
            _build
            jumpwire_test_keys
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - run: mix deps.get
      - run: mix test
      - name: Test against MariaDB
        env:
          MYSQL_TEST_PORT: 3307
        run: mix test test/jumpwire/proxy/mysql_test.exs

  build-release:
    #if: ${{ github.ref == 'refs/heads/trunk' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-release-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-release-buildx
      - name: Build release
        uses: docker/build-push-action@v2
        with:
          outputs: type=local,dest=release
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - uses: actions/upload-artifact@v3
        with:
          name: jumpwire-release
          path: release/jumpwire-*.tar.gz

  build-release-macos:
    #if: ${{ github.ref == 'refs/heads/trunk' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-release-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-release-buildx
      - name: Build release
        uses: docker/build-push-action@v2
        with:
          outputs: type=local,dest=release
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - uses: actions/upload-artifact@v3
        with:
          name: jumpwire-arm64-release
          path: release/jumpwire-*.tar.gz

  publish-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - test
      - build-release
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: jumpwire-release
      - name: Publish release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: jumpwire-*.tar.gz

  docker-image:
    runs-on: ubuntu-latest
    needs:
      - build-release
      #- test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/download-artifact@v3
        with:
          name: jumpwire-release
      - run: mv jumpwire-*.tar.gz release/
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/extragoodlabs/jumpwire
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=sha,format=long
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Docker metadata for external release
        id: external_meta
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          #            jumpwire/jumpwire
          images: |
            ghcr.io/extragoodlabs/jumpwire
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Login to Docker Hub
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v2
        with:
          username: jumpwire
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: release
          tags: ${{ steps.meta.outputs.tags }},${{ steps.external_meta.outputs.tags }}
          #push: ${{ github.event_name != 'pull_request' }}
          push: true

  docker-image-macos:
    runs-on: macos-latest
    needs:
      - build-release-macos
      #- test
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/download-artifact@v3
        with:
          name: jumpwire-macos-release
      - run: mv jumpwire-*.tar.gz release/
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/extragoodlabs/jumpwire
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=sha,format=long
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Docker metadata for external release
        id: external_meta
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          #jumpwire/jumpwire
          images: |
            ghcr.io/extragoodlabs/jumpwire
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Login to Docker Hub
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v2
        with:
          username: jumpwire
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: release
          tags: ${{ steps.meta.outputs.tags }},${{ steps.external_meta.outputs.tags }}
          #push: ${{ github.event_name != 'pull_request' }}
          push: true
