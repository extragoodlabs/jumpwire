name: static analysis
on: [pull_request]
env:
  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.github_token }}
jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: '25'
          elixir-version: '1.14.5'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: reviewdog/action-setup@v1

      - name: Restore build cache
        uses: actions/cache@v2
        id: mix_cache
        if: ${{ !env.ACT }}
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Dependencies
        if: steps.mix_cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile

      - name: Run credo
        run: |
          mix credo suggest --format=flycheck \
          | reviewdog -efm="%f:%l:%c: %t: %m" -efm="%f:%l: %t: %m" -name="credo" -reporter="github-pr-check"

      # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
      # Cache key based on Elixir & Erlang version (also useful when running in matrix)
      - name: Restore PLT cache
        uses: actions/cache@v2
        if: ${{ !env.ACT }}
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: |
          mix dialyzer --format github --quiet \
          | reviewdog -efm="::%t%s file=%f,line=%l,title=%s::%m." -name="dialyzer" -reporter="github-pr-check"
